Курсовая работа по итогам модуля "DevOps и системное администрирование"
Курсовая работа необходима для проверки практических навыков, полученных в ходе прохождения курса "DevOps и системное администрирование".

Мы создадим и настроим виртуальное рабочее место. Позже вы сможете использовать эту систему для выполнения домашних заданий по курсу

Решение задания.

Создайте виртуальную машину Linux. +

Установите ufw и разрешите к этой машине сессии на порты 22 и 443, при этом трафик на интерфейсе localhost (lo) должен ходить свободно на все порты.
```
sudo ufw allow 22
sudo ufw allow 443
sudo ufw allow in on lo to any
sudo ufw allow out on lo to any
```

```
root@vagrant:/home/vagrant#  ufw status numbered
Status: active

     To                         Action      From
     --                         ------      ----
[ 1] 22                         ALLOW IN    Anywhere                  
[ 2] 443                        ALLOW IN    Anywhere                  
[ 3] 22 (v6)                    ALLOW IN    Anywhere (v6)             
[ 4] 443 (v6)                   ALLOW IN    Anywhere (v6)
[ 5] Anywhere on lo             ALLOW IN    Anywhere
[ 6]Anywhere (v6) on lo         ALLOW IN    Anywhere (v6)
[ 7]Anywhere                    ALLOW OUT   Anywhere on lo
[ 8]Anywhere (v6)               ALLOW OUT   Anywhere (v6) on lo
```

Установите hashicorp vault (инструкция по ссылке).


```
root@vagrant:/etc/vault# apt-get update && apt-get install vault
Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
Hit:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease                 
Hit:3 https://apt.releases.hashicorp.com focal InRelease                       
Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease               
Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
Reading package lists... Done
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following NEW packages will be installed:
  vault
0 upgraded, 1 newly installed, 0 to remove and 110 not upgraded.
Need to get 69.4 MB of archives.
After this operation, 188 MB of additional disk space will be used.
Get:1 https://apt.releases.hashicorp.com focal/main amd64 vault amd64 1.9.2 [69.4 MB]
Fetched 69.4 MB in 10s (7,162 kB/s)                                            
Selecting previously unselected package vault.
(Reading database ... 78681 files and directories currently installed.)
Preparing to unpack .../archives/vault_1.9.2_amd64.deb ...
Unpacking vault (1.9.2) ...
Setting up vault (1.9.2) ...
Generating Vault TLS key and self-signed certificate...
Generating a RSA private key
..........................................................++++
...++++
writing new private key to 'tls.key'
-----
Vault TLS key and self-signed certificate have been generated in '/opt/vault/tls'.



root@vagrant:/home/vault2# systemctl status vault
● vault.service - "HashiCorp Vault - A tool for managing secrets"
     Loaded: loaded (/etc/systemd/system/vault.service; enabled; vendor preset: enabled)
     Active: active (running) since Sun 2021-12-12 11:30:55 UTC; 1min 54s ago
       Docs: https://www.vaultproject.io/docs/
   Main PID: 66824 (vault)
      Tasks: 11 (limit: 1071)
     Memory: 7.6M
     CGroup: /system.slice/vault.service
             └─66824 /usr/local/bin/vault server -config=/etc/vault/config.hcl

Dec 12 11:30:55 vagrant vault[66824]:                      Cgo: disabled
Dec 12 11:30:55 vagrant vault[66824]:          Cluster Address: https://0.0.0.0:8201
Dec 12 11:30:55 vagrant vault[66824]:               Listener 1: tcp (addr: "0.0.0.0:8200", cluster address: "0.0.0.0:8201", max_request_duration: "1m30s", max_request_size: "33554432", >
Dec 12 11:30:55 vagrant vault[66824]:                Log Level: info
Dec 12 11:30:55 vagrant vault[66824]:                    Mlock: supported: true, enabled: false
Dec 12 11:30:55 vagrant vault[66824]:                  Storage: file
Dec 12 11:30:55 vagrant vault[66824]:                  Version: Vault v1.0.3
Dec 12 11:30:55 vagrant vault[66824]:              Version Sha: 85909e3373aa743c34a6a0ab59131f61fd9e8e43
Dec 12 11:30:55 vagrant vault[66824]: ==> Vault server started! Log data will stream in below:
lines 1-20/20 (END)
```


Cоздайте центр сертификации по инструкции (ссылка) и выпустите сертификат для использования его в настройке веб-сервера nginx (срок жизни сертификата - месяц).

```
Запускаем сервер:

vault server -dev -dev-root-token-id root
```


```
# Включаем инфраструктуру PKI
root@vagrant:~# vault secrets enable pki
Success! Enabled the pki secrets engine at: pki/
# Настраиваем PKI для выдачи сертификатов с максимальным временем жизни 87600 часов (10 лет)
root@vagrant:~# vault secrets tune -max-lease-ttl=87600h pki
Success! Tuned the secrets engine at: pki/
# Генерируем корневой сертификат и сохраняем в файл CA_cert.crt
root@vagrant:~# vault write -field=certificate pki/root/generate/internal common_name="example.com" ttl=87600h > CA_cert.crt
# Настраиваем URL центра сертификации и отозванных сертификатов
root@vagrant:/home/vagrant# vault write pki/config/urls \
>      issuing_certificates="$VAULT_ADDR/v1/pki/ca" \
>      crl_distribution_points="$VAULT_ADDR/v1/pki/crl"
Success! Data written to: pki/config/urls

root@vagrant:/home/vagrant# vault secrets enable -path=pki_int pki
Success! Enabled the pki secrets engine at: pki_int/

root@vagrant:/home/vagrant# vault secrets tune -max-lease-ttl=43800h pki_int
Success! Tuned the secrets engine at: pki_int/


root@vagrant:/home/vagrant# vault write -format=json pki_int/intermediate/generate/internal \
>      common_name="example.com Intermediate Authority" \
>      | jq -r '.data.csr' > pki_intermediate.csr


root@vagrant:/home/vagrant# vault write pki_int/intermediate/set-signed certificate=@intermediate.cert.pem
Success! Data written to: pki_int/intermediate/set-signed


root@vagrant:/home/vagrant# vault write pki_int/roles/example-com allowed_domains="example.com" allow_bare_domains=true allow_subdomains=true max_ttl="720h"
Success! Data written to: pki_int/roles/example-com



root@vagrant:/home/vagrant# vault write pki_int/issue/example-com common_name="example.com" ttl="720h"
Key                 Value
---                 -----
ca_chain            [-----BEGIN CERTIFICATE-----
MIIDpjCCAo6gAwIBAgIUTjv+DZ0M47SOBp0OpZrTL/3Wb60wDQYJKoZIhvcNAQEL
BQAwFjEUMBIGA1UEAxMLZXhhbXBsZS5jb20wHhcNMjExMjI3MDcyODQzWhcNMjYx
MjI2MDcyOTEzWjAtMSswKQYDVQQDEyJleGFtcGxlLmNvbSBJbnRlcm1lZGlhdGUg
QXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2GsAXzKY
w9/sLhSVUAnB9Dk0dEfQQywzZn7it1SvbtwFFcTs285cNkgDG8TgROfGzWaIc+0b
Q70n/LDYoRcQMbgMq30krLQvErwnaj/L8DNkco9n1YE7nXYK1xU7MBgd7an3KmHB
q5jA5oNBG713AmqmlmsItikfpwg9r3fw6ERiMN1m+7WLcy7gVGwmlwetZRHvYVhC
+Wbb/U7Tw0W2uhVA3cT85m5iTGcxHMf02fVaURnnYx155hdZPBWeqe3iKCyJmVSp
BNn4vhP5suuXNKGQpDCihaun3rREBBpJoYSSw3vhgNEnrrvj0DOcAXv3c/rWYB8a
p22U3GikRZ55vwIDAQABo4HUMIHRMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E
BTADAQH/MB0GA1UdDgQWBBTQ0PD5Zaxfub1gems30NynTw4GdDAfBgNVHSMEGDAW
gBQfJHP0MpVVPY0C4ijPNCNX2oBRvzA7BggrBgEFBQcBAQQvMC0wKwYIKwYBBQUH
MAKGH2h0dHA6Ly8xMjcuMC4wLjE6ODIwMC92MS9wa2kvY2EwMQYDVR0fBCowKDAm
oCSgIoYgaHR0cDovLzEyNy4wLjAuMTo4MjAwL3YxL3BraS9jcmwwDQYJKoZIhvcN
AQELBQADggEBAEA4dELb/SOmDWsnbM84tZ0zS3BDgW0zDG2nxHI7Y1yqqAdkh6xl
x6ZiuMM7du8vgOO3j0PFPqjC3dlk0yjJPCakcIn/a+NljsFaF+ZHQmUNkOURvIO5
4c5oSk9oAZ+vhkJXsIWW1b5aJTeRGlike0pFmz0+hWWJ7p+jluBMwOeGElB1Cu5G
mVBBxJpREf57TN/hNJQ5zelvm+sMfMVWibYQzSC/5U20QlliHoEIzGpOtx6j1+dC
8rWwXorC3pidWajvsJN3SyspEmYc0Y1YxFDDHyhEvCKyS/39CaImSrZu+oGgKoSu
QMfjyOeIaOuSvN3v4PVWfrYpECwkbiiIafo=
-----END CERTIFICATE-----]
certificate         -----BEGIN CERTIFICATE-----
MIIDXDCCAkSgAwIBAgIUH6KdNRrDKzsB2ccVR8J7y5kO8cwwDQYJKoZIhvcNAQEL
BQAwLTErMCkGA1UEAxMiZXhhbXBsZS5jb20gSW50ZXJtZWRpYXRlIEF1dGhvcml0
eTAeFw0yMTEyMjcwNzMyMDNaFw0yMjAxMjYwNzMyMzNaMBYxFDASBgNVBAMTC2V4
YW1wbGUuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArYzjfNlk
H2NeHu3Fbi7MUlFlrDdcyuH9YEEwmEYD04fR/ESzyCJLqLqYjhINQ2o63b1ND2ds
LXmuMkEH2Phmu2lMkqPDi35+rEfOeB3bBnEYx0u/BDN3JDxtUcfUDJJbNdP13VyH
BV1DiXQHI94hqLrnYO400kES9f8nNa3QGS7le9IpLazuO0jyqAeaqg8fwInSBKLc
8Ot8ksz+ora/wgfG9Scj96x8jK+skDaC7rOU/mg7Qk1Oz/QxTxHhluBZ9rpA9W8J
fg8dUfkTcyG37FWOOHMmDUVsA32FcleQACMsbWtbwuT2a3YWHpSRWAcIM6XPKKnb
kZ+I/g9qw3PJCQIDAQABo4GKMIGHMA4GA1UdDwEB/wQEAwIDqDAdBgNVHSUEFjAU
BggrBgEFBQcDAQYIKwYBBQUHAwIwHQYDVR0OBBYEFMZdxLxqm5hMEiQ6lLeEzANt
8RtJMB8GA1UdIwQYMBaAFNDQ8PllrF+5vWB6azfQ3KdPDgZ0MBYGA1UdEQQPMA2C
C2V4YW1wbGUuY29tMA0GCSqGSIb3DQEBCwUAA4IBAQAUKA5og04LPACUBwgcEUq6
tanDFVTZmvJo+ZLby4D5qYAqSIpyDMIK0oNouk9Wx/pxPBfNAZEM98P4sLjRmZya
v93oM8XVcANxlvub38DpdqWxG/qutWgjgjls+kyhRBtMZQGhLbdGlSe2QIAILs1+
fvlgrXXQw+MaAW9KMzzPHFjh5v+/sROJY8PuzSM+DkBJK16u30+TeMb1hiH2/yhU
n3xHrMUaxTdvc7ZThvoA5gYZ04owJdnE+i23eH7yD9mBQ213Q0OCdRM26tw1E/+z
sIdNJCeXIH4mHuFAsRMLmi+qCkq+EQppi3WJ92nV+vqKr8dFWoXJYJBH9Yxonyj6
-----END CERTIFICATE-----
expiration          1643182353
issuing_ca          -----BEGIN CERTIFICATE-----
MIIDpjCCAo6gAwIBAgIUTjv+DZ0M47SOBp0OpZrTL/3Wb60wDQYJKoZIhvcNAQEL
BQAwFjEUMBIGA1UEAxMLZXhhbXBsZS5jb20wHhcNMjExMjI3MDcyODQzWhcNMjYx
MjI2MDcyOTEzWjAtMSswKQYDVQQDEyJleGFtcGxlLmNvbSBJbnRlcm1lZGlhdGUg
QXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2GsAXzKY
w9/sLhSVUAnB9Dk0dEfQQywzZn7it1SvbtwFFcTs285cNkgDG8TgROfGzWaIc+0b
Q70n/LDYoRcQMbgMq30krLQvErwnaj/L8DNkco9n1YE7nXYK1xU7MBgd7an3KmHB
q5jA5oNBG713AmqmlmsItikfpwg9r3fw6ERiMN1m+7WLcy7gVGwmlwetZRHvYVhC
+Wbb/U7Tw0W2uhVA3cT85m5iTGcxHMf02fVaURnnYx155hdZPBWeqe3iKCyJmVSp
BNn4vhP5suuXNKGQpDCihaun3rREBBpJoYSSw3vhgNEnrrvj0DOcAXv3c/rWYB8a
p22U3GikRZ55vwIDAQABo4HUMIHRMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E
BTADAQH/MB0GA1UdDgQWBBTQ0PD5Zaxfub1gems30NynTw4GdDAfBgNVHSMEGDAW
gBQfJHP0MpVVPY0C4ijPNCNX2oBRvzA7BggrBgEFBQcBAQQvMC0wKwYIKwYBBQUH
MAKGH2h0dHA6Ly8xMjcuMC4wLjE6ODIwMC92MS9wa2kvY2EwMQYDVR0fBCowKDAm
oCSgIoYgaHR0cDovLzEyNy4wLjAuMTo4MjAwL3YxL3BraS9jcmwwDQYJKoZIhvcN
AQELBQADggEBAEA4dELb/SOmDWsnbM84tZ0zS3BDgW0zDG2nxHI7Y1yqqAdkh6xl
x6ZiuMM7du8vgOO3j0PFPqjC3dlk0yjJPCakcIn/a+NljsFaF+ZHQmUNkOURvIO5
4c5oSk9oAZ+vhkJXsIWW1b5aJTeRGlike0pFmz0+hWWJ7p+jluBMwOeGElB1Cu5G
mVBBxJpREf57TN/hNJQ5zelvm+sMfMVWibYQzSC/5U20QlliHoEIzGpOtx6j1+dC
8rWwXorC3pidWajvsJN3SyspEmYc0Y1YxFDDHyhEvCKyS/39CaImSrZu+oGgKoSu
QMfjyOeIaOuSvN3v4PVWfrYpECwkbiiIafo=
-----END CERTIFICATE-----
private_key         -----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEArYzjfNlkH2NeHu3Fbi7MUlFlrDdcyuH9YEEwmEYD04fR/ESz
yCJLqLqYjhINQ2o63b1ND2dsLXmuMkEH2Phmu2lMkqPDi35+rEfOeB3bBnEYx0u/
BDN3JDxtUcfUDJJbNdP13VyHBV1DiXQHI94hqLrnYO400kES9f8nNa3QGS7le9Ip
LazuO0jyqAeaqg8fwInSBKLc8Ot8ksz+ora/wgfG9Scj96x8jK+skDaC7rOU/mg7
Qk1Oz/QxTxHhluBZ9rpA9W8Jfg8dUfkTcyG37FWOOHMmDUVsA32FcleQACMsbWtb
wuT2a3YWHpSRWAcIM6XPKKnbkZ+I/g9qw3PJCQIDAQABAoIBAGT93I+Vjb76OxYy
dTZGA15PwaOy38usMJ7nsJib/bQFkHuFmzz2QCLi2s2p0ZAObE0G0KYLIBdifKz/
zMpE2rtqbkXTCILPTHWCn7KkZQVdoPawrGqMbGNoypDRgSMDtBIh0yxKoMPNXvTI
0TLdG6cthGGSnKhRd/Aw16dUCwnrm/3PpcYi9XWb9l0xXNs/FG2FA64Di0ensZDE
Qpn+RHW1xOP2Z6XAAkzgocbBPc/PitBoOnjzSlWZdaTXB58v86AnpdONrfkrIUfl
MQ2qRM0yD2Rtxnt4JOU+F5m4I/U6Zjkw3MTlPgOJJfPlHGGqYm3a/Jc2AiOqf5RC
y3YqblECgYEA10arKzYiJu76ME/n+WyYYXq30gboRckJjbmiwnQTikuw/PM4JNoj
IlhkJgeXdGutgYynw3/hC0UWWWB407d6uWhP9REAl+xoztXXNB7YNnTT0fe+Fmb3
smdV0rCJiQ8F7AyxsN7u0ZaXOmlDHOIlTtc7V9hOF9qJ9WR64iQBeXUCgYEAzmGJ
6Y4mEktrM2d6KbQ5bOsP+7AprQ0UQ0285alHQ0N7hfoLU5YSLrh17n1gpTyzIV+Y
BmNyhKK7PPmz6IrM6LyTgx9g4Ww2aRmwMbN2qJXBPxXoBitzjF7zBL1jvcc+wFEa
uBv6eWD0n8Hj+gKNrKi47xDrg2x2WCeF8TgvysUCgYEAm5ne2wrzwIR3njgDikuu
ELds6ohHlzlqiGAnfrn77bgsI4mBiVGKl6agLMTL+kBiVwNdt3dVKJo1P0D11MII
GL+HG7HAZg9g6i+yr1+kFCh5eojBgtvGKdN7OyCTKNgNBcNfJGLe5+sbQAMZmWT0
Zno30JTuTVuO4CpSj+ZKkokCgYBvZ6WbprkUbRPMJtKCCqBpFCaHlZuZp5LFlgQe
8Rbfz2CxfL16fGsKP1ahy5pM+Aw2OrUE1c/umy15h80+/RYJmCoEwP56EQD6EPzU
h2zJKjWryTZ7hh8UqfiDGXzq59AO3nkO40N9HAJQ7sgSoCg8CMPzgO2w/u6PPZ6H
DO53hQKBgBBytorDY2z1QLczT7/br4aald7Y6rGVp+waIBs7v3PAwRq8S1Kuk9Ag
8rDF8vULeussR5GegB2I2JGN1m1+h8z9hCmUfqLGSlyWzpc5uRlthruYC2MLZEHq
txD+k3MvVhBwWI8c4jJDRsQwBlkKt9J8Mh8IWVSil6/hncYUdOsn
-----END RSA PRIVATE KEY-----
private_key_type    rsa
serial_number       1f:a2:9d:35:1a:c3:2b:3b:01:d9:c7:15:47:c2:7b:cb:99:0e:f1:cc


```

root@vagrant:~# vim /etc/vault.d/config.hcl

```
ui = false

storage "file" {
  path = "/opt/vault/data"
}

listener "tcp" {
  address = "127.0.0.1:8200"
  tls_disable = 1
}

root@vagrant:/etc/vault# export VAULT_ADDR=http://127.0.0.1:8200
root@vagrant:/etc/vault# vault status                           
Key                Value
---                -----
Seal Type          shamir
Initialized        true
Sealed             true
Total Shares       122
Threshold          122
Unseal Progress    0/122
Unseal Nonce       n/a
Version            1.0.3
HA Enabled         false
```


Установите корневой сертификат созданного центра сертификации в доверенные в хостовой системе.

```
 файл со скриншотом не захотел прикрепляться к документу, выложил на диск:
https://drive.google.com/file/d/1Ze0ErBDVOEU3MMDikA4dqfknnDO3hL48/view?usp=sharing
```


Установите nginx.
```
apt install nginx

root@vagrant:/var/www/example.com# systemctl status nginx
● nginx.service - A high performance web server and a reverse proxy server
     Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)
     Active: active (running) since Tue 2021-12-28 08:12:07 UTC; 3min 27s ago
       Docs: man:nginx(8)
    Process: 6244 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (c>
    Process: 6255 ExecStart=/usr/sbin/nginx -g daemon on; master_process on; (code=exite>
   Main PID: 6256 (nginx)
      Tasks: 3 (limit: 1071)
     Memory: 3.5M
     CGroup: /system.slice/nginx.service
             ├─6256 nginx: master process /usr/sbin/nginx -g daemon on; master_process o>
             ├─6257 nginx: worker process
             └─6258 nginx: worker process

Dec 28 08:12:07 vagrant systemd[1]: Starting A high performance web server and a reverse>
Dec 28 08:12:07 vagrant systemd[1]: Started A high performance web server and a reverse >
lines 1-16/16 (END)
```

По инструкции (ссылка) настройте nginx на https, используя ранее подготовленный сертификат:
```
server {
        listen              443 ssl;
        server_name         example.com;
        ssl_certificate     /home/vagrant/example.com.crt;
        ssl_certificate_key /home/vagrant/example.com.key;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        root /var/www/example.com;
            
#           index index.html;
        }
```        
        
можно использовать стандартную стартовую страницу nginx для демонстрации работы сервера;
можно использовать и другой html файл, сделанный вами;


``` 
root@vagrant:/var/www/example.com# cat index.html 
<html>
        <body>
                <H1>PRIVET!</H1>
        </body>
</html>
``` 
Откройте в браузере на хосте https адрес страницы, которую обслуживает сервер nginx.

```
 файл со скриншотом не захотел прикрепляться к документу, выложил на диск:
https://drive.google.com/file/d/1vTvUTOQHZkC7ci8M2fV8V_LZG6473Lzk/view?usp=sharing

```



Создайте скрипт, который будет генерировать новый сертификат в vault:
генерируем новый сертификат так, чтобы не переписывать конфиг nginx;
перезапускаем nginx для применения нового сертификата.


```
root@vagrant:/home/vagrant# cat newsrtforsite.sh
#генерим серт
vault write -format-json pki_int_ca/issue/example-com \
        common_name="example.com" \
        alt_names="example.com" \
        ttl="720" > all_keys_example.com.crt

#разбираем на нужные части, как делали выше руками
cat all_keys_example.com.crt | jq -r .data.certificate > example1.com.crt
cat all_keys_example.com.crt | jq -r .data.issuing > example.com.key
cat all_keys_example.com.crt | jq -r .data.private_key > ca_chain

# соединяем пару сертификат и issuing_ca
cat example1.com.crt ca_chain > example.com.crt 

#Рестартуем сервис
/usr/sbin/nginx -s reload

Поместите скрипт в crontab, чтобы сертификат обновлялся какого-то числа каждого месяца в удобное для вас время.

root@vagrant:/home/vagrant# crontab -l
# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
20 8 * * * /home/vagrant/newsrtforsite.sh
```


```
root@vagrant:~# grep CRON /var/log/syslog
...
Dec 28 08:12:01 vagrant CRON[20735]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)
Dec 28 08:15:01 vagrant CRON[20764]: (root) CMD (test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily ))
Dec 28 08:20:01 vagrant CRON[20827]: (root) CMD (/home/vagrant/newsrtforsite.sh)
Dec 28 08:25:01 vagrant CRON[20826]: (CRON) info (No MTA installed, discarding output)
```

Результат
Результатом курсовой работы должны быть снимки экрана или текст:

Процесс установки и настройки ufw
Процесс установки и выпуска сертификата с помощью hashicorp vault
Процесс установки и настройки сервера nginx
Страница сервера nginx в браузере хоста не содержит предупреждений
Скрипт генерации нового сертификата работает (сертификат сервера ngnix должен быть "зеленым")
Crontab работает (выберите число и время так, чтобы показать что crontab запускается и делает что надо)
Как сдавать курсовую работу
Курсовую работу выполните в файле readme.md в github репозитории. В личном кабинете отправьте на проверку ссылку на .md-файл в вашем репозитории.

Также вы можете выполнить задание в Google Docs и отправить в личном кабинете на проверку ссылку на ваш документ. Если необходимо прикрепить дополнительные ссылки, просто добавьте их в свой Google Docs.

Перед тем как выслать ссылку, убедитесь, что ее содержимое не является приватным (открыто на комментирование всем, у кого есть ссылка), иначе преподаватель не сможет проверить работу. Ссылка на инструкцию Как предоставить доступ к файлам и папкам на Google Диске.
