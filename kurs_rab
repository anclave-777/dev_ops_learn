Курсовая работа по итогам модуля "DevOps и системное администрирование"
Курсовая работа необходима для проверки практических навыков, полученных в ходе прохождения курса "DevOps и системное администрирование".

Мы создадим и настроим виртуальное рабочее место. Позже вы сможете использовать эту систему для выполнения домашних заданий по курсу

Решение задания.

Создайте виртуальную машину Linux. +

Установите ufw и разрешите к этой машине сессии на порты 22 и 443, при этом трафик на интерфейсе localhost (lo) должен ходить свободно на все порты.
```
sudo ufw allow 22
sudo ufw allow 443
sudo ufw allow in on lo to any
sudo ufw allow out on lo to any
```

```
root@vagrant:/home/vagrant#  ufw status numbered
Status: active

     To                         Action      From
     --                         ------      ----
[ 1] 22                         ALLOW IN    Anywhere                  
[ 2] 443                        ALLOW IN    Anywhere                  
[ 3] 22 (v6)                    ALLOW IN    Anywhere (v6)             
[ 4] 443 (v6)                   ALLOW IN    Anywhere (v6)
[ 5] Anywhere on lo             ALLOW IN    Anywhere
[ 6]Anywhere (v6) on lo         ALLOW IN    Anywhere (v6)
[ 7]Anywhere                    ALLOW OUT   Anywhere on lo
[ 8]Anywhere (v6)               ALLOW OUT   Anywhere (v6) on lo
```

Установите hashicorp vault (инструкция по ссылке).


```
root@vagrant:/etc/vault# apt-get update && apt-get install vault
Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
Hit:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease                 
Hit:3 https://apt.releases.hashicorp.com focal InRelease                       
Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease               
Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
Reading package lists... Done
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following NEW packages will be installed:
  vault
0 upgraded, 1 newly installed, 0 to remove and 110 not upgraded.
Need to get 69.4 MB of archives.
After this operation, 188 MB of additional disk space will be used.
Get:1 https://apt.releases.hashicorp.com focal/main amd64 vault amd64 1.9.2 [69.4 MB]
Fetched 69.4 MB in 10s (7,162 kB/s)                                            
Selecting previously unselected package vault.
(Reading database ... 78681 files and directories currently installed.)
Preparing to unpack .../archives/vault_1.9.2_amd64.deb ...
Unpacking vault (1.9.2) ...
Setting up vault (1.9.2) ...
Generating Vault TLS key and self-signed certificate...
Generating a RSA private key
..........................................................++++
...++++
writing new private key to 'tls.key'
-----
Vault TLS key and self-signed certificate have been generated in '/opt/vault/tls'.



root@vagrant:/home/vault2# systemctl status vault
● vault.service - "HashiCorp Vault - A tool for managing secrets"
     Loaded: loaded (/etc/systemd/system/vault.service; enabled; vendor preset: enabled)
     Active: active (running) since Sun 2021-12-12 11:30:55 UTC; 1min 54s ago
       Docs: https://www.vaultproject.io/docs/
   Main PID: 66824 (vault)
      Tasks: 11 (limit: 1071)
     Memory: 7.6M
     CGroup: /system.slice/vault.service
             └─66824 /usr/local/bin/vault server -config=/etc/vault/config.hcl

Dec 12 11:30:55 vagrant vault[66824]:                      Cgo: disabled
Dec 12 11:30:55 vagrant vault[66824]:          Cluster Address: https://0.0.0.0:8201
Dec 12 11:30:55 vagrant vault[66824]:               Listener 1: tcp (addr: "0.0.0.0:8200", cluster address: "0.0.0.0:8201", max_request_duration: "1m30s", max_request_size: "33554432", >
Dec 12 11:30:55 vagrant vault[66824]:                Log Level: info
Dec 12 11:30:55 vagrant vault[66824]:                    Mlock: supported: true, enabled: false
Dec 12 11:30:55 vagrant vault[66824]:                  Storage: file
Dec 12 11:30:55 vagrant vault[66824]:                  Version: Vault v1.0.3
Dec 12 11:30:55 vagrant vault[66824]:              Version Sha: 85909e3373aa743c34a6a0ab59131f61fd9e8e43
Dec 12 11:30:55 vagrant vault[66824]: ==> Vault server started! Log data will stream in below:
lines 1-20/20 (END)
```


Cоздайте центр сертификации по инструкции (ссылка) и выпустите сертификат для использования его в настройке веб-сервера nginx (срок жизни сертификата - месяц).

root@vagrant:~# vim /etc/vault.d/config.hcl

```
ui = false

storage "file" {
  path = "/opt/vault/data"
}

listener "tcp" {
  address = "127.0.0.1:8200"
  tls_disable = 1
}

root@vagrant:/etc/vault# export VAULT_ADDR=http://127.0.0.1:8200
root@vagrant:/etc/vault# vault status                           
Key                Value
---                -----
Seal Type          shamir
Initialized        true
Sealed             true
Total Shares       122
Threshold          122
Unseal Progress    0/122
Unseal Nonce       n/a
Version            1.0.3
HA Enabled         false
```


Установите корневой сертификат созданного центра сертификации в доверенные в хостовой системе.

Установите nginx.
```
apt install nginx
```

По инструкции (ссылка) настройте nginx на https, используя ранее подготовленный сертификат:

можно использовать стандартную стартовую страницу nginx для демонстрации работы сервера;
можно использовать и другой html файл, сделанный вами;

Откройте в браузере на хосте https адрес страницы, которую обслуживает сервер nginx.
Создайте скрипт, который будет генерировать новый сертификат в vault:
генерируем новый сертификат так, чтобы не переписывать конфиг nginx;
перезапускаем nginx для применения нового сертификата.
Поместите скрипт в crontab, чтобы сертификат обновлялся какого-то числа каждого месяца в удобное для вас время.
Результат
Результатом курсовой работы должны быть снимки экрана или текст:

Процесс установки и настройки ufw
Процесс установки и выпуска сертификата с помощью hashicorp vault
Процесс установки и настройки сервера nginx
Страница сервера nginx в браузере хоста не содержит предупреждений
Скрипт генерации нового сертификата работает (сертификат сервера ngnix должен быть "зеленым")
Crontab работает (выберите число и время так, чтобы показать что crontab запускается и делает что надо)
Как сдавать курсовую работу
Курсовую работу выполните в файле readme.md в github репозитории. В личном кабинете отправьте на проверку ссылку на .md-файл в вашем репозитории.

Также вы можете выполнить задание в Google Docs и отправить в личном кабинете на проверку ссылку на ваш документ. Если необходимо прикрепить дополнительные ссылки, просто добавьте их в свой Google Docs.

Перед тем как выслать ссылку, убедитесь, что ее содержимое не является приватным (открыто на комментирование всем, у кого есть ссылка), иначе преподаватель не сможет проверить работу. Ссылка на инструкцию Как предоставить доступ к файлам и папкам на Google Диске.
